{"id":"qf46","dependencies":[{"name":"/Users/reecebailey/node_modules/@ethersproject/abi/lib.esm/coders/boolean.js.map","includedInParent":true,"mtime":1667358603298},{"name":"/Users/reecebailey/node_modules/@ethersproject/abi/src.ts/coders/boolean.ts","includedInParent":true,"mtime":1667358603298},{"name":"/Users/reecebailey/Documents/GitHub/METASQUATCH/example/package.json","includedInParent":true,"mtime":1677792288031},{"name":"/Users/reecebailey/node_modules/@ethersproject/abi/package.json","includedInParent":true,"mtime":1667358603298},{"name":"./abstract-coder","loc":{"line":2,"column":22,"index":36},"parent":"/Users/reecebailey/node_modules/@ethersproject/abi/lib.esm/coders/boolean.js","resolved":"/Users/reecebailey/node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.BooleanCoder=void 0;var e=require(\"./abstract-coder\");class r extends e.Coder{constructor(e){super(\"bool\",\"bool\",e,!1)}defaultValue(){return!1}encode(e,r){return e.writeValue(r?1:0)}decode(e){return e.coerce(this.type,!e.readValue().isZero())}}exports.BooleanCoder=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":1,"column":13}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":1,"column":20}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":1,"column":35}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":1,"column":43}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":1,"column":56}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":1,"column":57}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":1,"column":64}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":1,"column":68}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":1,"column":76}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":1,"column":94}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":96}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":100}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":102}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":110}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":1,"column":130}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":1,"column":136}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":34},"generated":{"line":1,"column":146}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":1,"column":148}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":1,"column":154}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":7,"column":16},"generated":{"line":1,"column":166}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":14},"generated":{"line":1,"column":169}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":14},"generated":{"line":1,"column":175}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":22},"generated":{"line":1,"column":182}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":30},"generated":{"line":1,"column":189}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":41},"generated":{"line":1,"column":192}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":1,"column":195}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":12,"column":15},"generated":{"line":1,"column":210}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":12,"column":15},"generated":{"line":1,"column":217}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":1,"column":219}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":15,"column":11},"generated":{"line":1,"column":226}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":15,"column":27},"generated":{"line":1,"column":228}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":15},"generated":{"line":1,"column":231}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":15},"generated":{"line":1,"column":238}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":22},"generated":{"line":1,"column":240}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":33},"generated":{"line":1,"column":251}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":41},"generated":{"line":1,"column":253}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":44},"generated":{"line":1,"column":255}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":1,"column":258}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":19,"column":11},"generated":{"line":1,"column":265}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":1,"column":268}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":1,"column":275}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":22},"generated":{"line":1,"column":277}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":29},"generated":{"line":1,"column":284}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":34},"generated":{"line":1,"column":289}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":41},"generated":{"line":1,"column":295}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":48},"generated":{"line":1,"column":297}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":60},"generated":{"line":1,"column":309}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":1,"column":320}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":1,"column":328}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":1,"column":341}}],"sources":{"../../src.ts/coders/boolean.ts":"\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, value: boolean): number {\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n\n"},"lineCount":null}},"error":null,"hash":"cea9fab2ca68f9a526474b5cc1516d70","cacheData":{"env":{}}}