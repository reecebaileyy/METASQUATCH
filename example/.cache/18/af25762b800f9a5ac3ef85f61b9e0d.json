{"id":"pdpV","dependencies":[{"name":"/Users/reecebailey/node_modules/@ethersproject/strings/lib.esm/bytes32.js.map","includedInParent":true,"mtime":1667358604594},{"name":"/Users/reecebailey/node_modules/@ethersproject/strings/src.ts/bytes32.ts","includedInParent":true,"mtime":1667358604594},{"name":"/Users/reecebailey/Documents/GitHub/METASQUATCH/example/package.json","includedInParent":true,"mtime":1677792288031},{"name":"/Users/reecebailey/node_modules/@ethersproject/strings/package.json","includedInParent":true,"mtime":1667358604594},{"name":"@ethersproject/constants","loc":{"line":2,"column":25,"index":39},"parent":"/Users/reecebailey/node_modules/@ethersproject/strings/lib.esm/bytes32.js","resolved":"/Users/reecebailey/node_modules/@ethersproject/constants/lib.esm/index.js"},{"name":"@ethersproject/bytes","loc":{"line":3,"column":42,"index":109},"parent":"/Users/reecebailey/node_modules/@ethersproject/strings/lib.esm/bytes32.js","resolved":"/Users/reecebailey/node_modules/@ethersproject/bytes/lib.esm/index.js"},{"name":"./utf8","loc":{"line":4,"column":42,"index":175},"parent":"/Users/reecebailey/node_modules/@ethersproject/strings/lib.esm/bytes32.js","resolved":"/Users/reecebailey/node_modules/@ethersproject/strings/lib.esm/utf8.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.formatBytes32String=n,exports.parseBytes32String=s;var t=require(\"@ethersproject/constants\"),e=require(\"@ethersproject/bytes\"),r=require(\"./utf8\");function n(n){const s=(0,r.toUtf8Bytes)(n);if(s.length>31)throw new Error(\"bytes32 string must be less than 32 bytes\");return(0,e.hexlify)((0,e.concat)([s,t.HashZero]).slice(0,32))}function s(t){const n=(0,e.arrayify)(t);if(32!==n.length)throw new Error(\"invalid bytes32 - not 32 bytes long\");if(0!==n[31])throw new Error(\"invalid bytes32 string - no null terminator\");let s=31;for(;0===n[s-1];)s--;return(0,r.toUtf8String)(n.slice(0,s))}"},"sourceMaps":{"js":{"mappings":[{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":1,"column":13}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":1,"column":20}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":1,"column":35}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":1,"column":43}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":1,"column":56}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":1,"column":57}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":1,"column":64}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":1,"column":68}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":1,"column":76}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":1,"column":96}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":1,"column":98}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":1,"column":106}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":1,"column":125}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":127}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":131}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":133}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":141}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":169}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":171}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":179}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":203}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":205}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":213}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":1,"column":223}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":1,"column":232}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":9,"column":36},"generated":{"line":1,"column":234}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":1,"column":237}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":1,"column":243}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":12,"column":18},"generated":{"line":1,"column":246}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":12,"column":30},"generated":{"line":1,"column":248}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":12,"column":30},"generated":{"line":1,"column":250}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":12,"column":30},"generated":{"line":1,"column":263}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":1,"column":266}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":1,"column":269}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":14},"generated":{"line":1,"column":271}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":23},"generated":{"line":1,"column":278}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":35},"generated":{"line":1,"column":281}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":35},"generated":{"line":1,"column":287}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":39},"generated":{"line":1,"column":291}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":15,"column":45},"generated":{"line":1,"column":297}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":11},"generated":{"line":1,"column":342}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":11},"generated":{"line":1,"column":349}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":19},"generated":{"line":1,"column":351}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":19},"generated":{"line":1,"column":353}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":19},"generated":{"line":1,"column":363}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":26},"generated":{"line":1,"column":365}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":26},"generated":{"line":1,"column":367}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":26},"generated":{"line":1,"column":375}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":28},"generated":{"line":1,"column":376}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":35},"generated":{"line":1,"column":378}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":26},"generated":{"line":1,"column":380}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":47},"generated":{"line":1,"column":391}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":53},"generated":{"line":1,"column":397}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":18,"column":56},"generated":{"line":1,"column":399}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":1,"column":404}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":21,"column":16},"generated":{"line":1,"column":413}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":1,"column":415}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":22,"column":10},"generated":{"line":1,"column":418}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":22,"column":10},"generated":{"line":1,"column":424}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":22,"column":17},"generated":{"line":1,"column":427}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":22,"column":26},"generated":{"line":1,"column":429}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":22,"column":26},"generated":{"line":1,"column":431}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":22,"column":26},"generated":{"line":1,"column":441}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":1,"column":444}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":24},"generated":{"line":1,"column":447}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":1,"column":452}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":13},"generated":{"line":1,"column":454}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":36},"generated":{"line":1,"column":461}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":36},"generated":{"line":1,"column":467}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":40},"generated":{"line":1,"column":471}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":25,"column":46},"generated":{"line":1,"column":477}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":1,"column":516}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":21},"generated":{"line":1,"column":519}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":1,"column":523}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":13},"generated":{"line":1,"column":525}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":32},"generated":{"line":1,"column":529}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":32},"generated":{"line":1,"column":535}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":36},"generated":{"line":1,"column":539}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":26,"column":42},"generated":{"line":1,"column":545}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":29,"column":8},"generated":{"line":1,"column":592}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":29,"column":8},"generated":{"line":1,"column":596}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":29,"column":17},"generated":{"line":1,"column":598}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":11},"generated":{"line":1,"column":601}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":32},"generated":{"line":1,"column":606}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":11},"generated":{"line":1,"column":610}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":16},"generated":{"line":1,"column":612}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":1,"column":614}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":30,"column":37},"generated":{"line":1,"column":618}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":11},"generated":{"line":1,"column":622}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":11},"generated":{"line":1,"column":629}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":1,"column":631}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":1,"column":633}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":1,"column":647}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":29},"generated":{"line":1,"column":649}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":1,"column":655}},{"source":"../src.ts/bytes32.ts","name":null,"original":{"line":33,"column":38},"generated":{"line":1,"column":657}}],"sources":{"../src.ts/bytes32.ts":"\"use strict\";\n\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\n\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\n\n\nexport function formatBytes32String(text: string): string {\n\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n\n    // Check we have room for null-termination\n    if (bytes.length > 31) { throw new Error(\"bytes32 string must be less than 32 bytes\"); }\n\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([ bytes, HashZero ]).slice(0, 32));\n}\n\nexport function parseBytes32String(bytes: BytesLike): string {\n    const data = arrayify(bytes);\n\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) { throw new Error(\"invalid bytes32 - not 32 bytes long\"); }\n    if (data[31] !== 0) { throw new Error(\"invalid bytes32 string - no null terminator\"); }\n\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) { length--; }\n\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n\n"},"lineCount":null}},"error":null,"hash":"2b177b65750b4bb3d98f9dea576aa058","cacheData":{"env":{}}}